#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Java command to use when running NiFi (optional in Docker, but useful for custom JVM path)
java=java

# Username to use when running NiFi. This value will be ignored on Windows.
run.as=

# Preserve shell environment while running as "run.as" user
preserve.environment=false

# Configure where NiFi's lib and conf directories live
lib.dir=./lib
conf.dir=./conf

# How long to wait after telling NiFi to shutdown before explicitly killing the Process
graceful.shutdown.seconds=20

# JVM memory settings (Helm templated for flexibility in K8s)
java.arg.2=-Xms{{ .Values.jvmMemory }}
java.arg.3=-Xmx{{ .Values.jvmMemory }}

# Enable Remote Debugging (optional; controlled via Helm values if desired)
#java.arg.debug=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000

# Prefer IPv4 stack if necessary (important in many Kubernetes environments)
java.arg.4=-Djava.net.preferIPv4Stack=true

# allowRestrictedHeaders is required for Cluster/Node communications to work properly
java.arg.5=-Dsun.net.http.allowRestrictedHeaders=true
java.arg.6=-Djava.protocol.handler.pkgs=sun.net.www.protocol

# Optional trust store replacement for Cert-Manager managed PKI
{{ if .Values.certManager.replaceDefaultTrustStore }}
java.arg.7=-Djavax.net.ssl.trustStore=/opt/nifi/nifi-current/tls/truststore.jks
{{ end }}

# Enable Headless mode to avoid HeadlessException with Java AWT libraries
java.arg.headless=-Djava.awt.headless=true

# SecureRandom seed source to prevent blocking on /dev/random (important in container environments)
java.arg.8=-Djava.security.egd=file:/dev/urandom

# Curator connection logging for Apache ZooKeeper to avoid excessive ERROR messages
java.arg.9=-Dcurator-log-only-first-connection-issue-as-error-level=true

# JAAS config: Requires JAAS to use only the provided JAAS configuration without fallbacks
java.arg.10=-Djavax.security.auth.useSubjectCredsOnly=true

# Enable G1 Garbage Collector (optional but recommended for large JVM heaps to reduce pauses)
#java.arg.11=-XX:+UseG1GC

# AspectJ Weaver for native library loading issues in JDBC drivers (optional)
#java.arg.12=-javaagent:./lib/aspectj/aspectjweaver-1.9.22.1.jar
#java.arg.13=-Daj.weaving.loadersToSkip=sun.misc.Launcher$AppClassLoader,jdk.internal.loader.ClassLoaders$AppClassLoader,org.eclipse.jetty.webapp.WebAppClassLoader,\
#            org.apache.jasper.servlet.JasperLoader,org.jvnet.hk2.internal.DelegatingClassLoader,org.apache.nifi.nar.NarClassLoader

# Master key for encrypted sensitive configuration values (optional; injected via secret)
nifi.bootstrap.sensitive.key={{ .Values.bootstrapSensitiveKey }}

###
# Optional Notification Services (commented out but available if needed)
###
#notification.services.file=./conf/bootstrap-notification-services.xml
#notification.max.attempts=5
#nifi.start.notification.services=email-notification
#nifi.stop.notification.services=email-notification
#nifi.dead.notification.services=email-notification

###
# Extra bootstrap options provided via Helm values (extensibility point)
###
{{- range .Values.extraOptions }}
{{ .name }}={{ .value }}
{{- end }}
