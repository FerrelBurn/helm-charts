# -------------------------------------------------------------------
# Deployment Basics
# -------------------------------------------------------------------
replicaCount: 1

image:
  repository: registry1.dso.mil/ironbank/opensource/apache/nifi
  tag: "2.3.0-fips-bc"
  pullPolicy: "IfNotPresent"

pullSecret: ironbank-creds

securityContext:
  runAsUser: 1000
  fsGroup: 1000

# -------------------------------------------------------------------
# StatefulSet Configuration
# -------------------------------------------------------------------
sts:
  podManagementPolicy: Parallel
  AntiAffinity: soft
  useHostNetwork: null
  hostPort: null
  pod:
    annotations:
      security.alpha.kubernetes.io/sysctls: net.ipv4.ip_local_port_range=10000 65000
  serviceAccount:
    create: false
    annotations: {}
  hostAliases: []
  startupProbe:
    enabled: false
    failureThreshold: 60
    periodSeconds: 10

# -------------------------------------------------------------------
# NiFi Core Properties
# -------------------------------------------------------------------
properties:
  sensitiveKey: changeMechangeMe
  algorithm: NIFI_PBKDF2_AES_GCM_256
  externalSecure: false
  isNode: false
  httpsPort: 9443
  webProxyHost: "192.168.67.2:31443"
  clusterPort: 6007
  zkClientEnsembleTraker: false
  clusterNodeConnectionTimeout: '5 sec'
  clusterNodeReadTimeout: '5 sec'
  zookeeperConnectTimeout: '3 secs'
  zookeeperSessionTimeout: '3 secs'
  archiveMaxRetentionPeriod: "3 days"
  archiveMaxUsagePercentage: "85%"
  provenanceStorage: "8 GB"
  provenanceMaxStorageTime: "10 days"
  siteToSite:
    port: 10000
  safetyValve:
    nifi.web.http.network.interface.default: eth0
    nifi.web.http.network.interface.lo: lo

# -------------------------------------------------------------------
# Authentication
# -------------------------------------------------------------------
auth:
  admin: CN=admin, OU=NIFI
  SSL:
    keystorePasswd: changeMe
    truststorePasswd: changeMe
  singleUser:
    username: admin
    password: admin1234567
  clientAuth:
    enabled: false
  ldap:
    enabled: false
    host: 
    searchBase: 
    admin: 
    pass: 
    searchFilter: (objectClass=*)
    userIdentityAttribute: cn
    authStrategy: SIMPLE
    identityStrategy: USE_DN
    authExpiration: 12 hours
    userSearchScope: ONE_LEVEL
    groupSearchScope: ONE_LEVEL
  oidc:
    enabled: false
    discoveryUrl: 
    clientId: 
    clientSecret: 
    claimIdentifyingUser: email
    admin: nifi@example.com
    preferredJwsAlgorithm:
    additionalScopes:

# -------------------------------------------------------------------
# OpenLDAP (optional embedded)
# -------------------------------------------------------------------
openldap:
  enabled: false
  persistence:
    enabled: true
  env:
    LDAP_ORGANISATION: 
    LDAP_DOMAIN: 
    LDAP_BACKEND: "hdb"
    LDAP_TLS: "true"
    LDAP_TLS_ENFORCE: "false"
    LDAP_REMOVE_CONFIG_AFTER_SETUP: "false"
  adminPassword: 
  configPassword: 
  customLdifFiles:
    1-default-users.ldif: |-
      # Example LDIF content here

# -------------------------------------------------------------------
# NiFi Services
# -------------------------------------------------------------------
headless:
  type: ClusterIP
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"

service:
  type: NodePort
  httpsPort: 9443
  nodePort: 31443
  annotations: {}
  processors:
    enabled: false
    ports:
      - name: processor01
        port: 7001
        targetPort: 7001
      - name: processor02
        port: 7002
        targetPort: 7002

# -------------------------------------------------------------------
# Optional Configurations
# -------------------------------------------------------------------
containerPorts: []
ingress:
  enabled: false
  annotations: {}
  tls: []
  hosts: []
  path: /

jvmMemory: 3g

sidecar:
  image: busybox
  tag: "1.32.0"
  imagePullPolicy: "IfNotPresent"

persistence:
  enabled: false
  accessModes: [ReadWriteOnce]
  subPath:
    enabled: false
    name: data
    size: 30Gi
  configStorage:
    size: 100Mi
  authconfStorage:
    size: 100Mi
  dataStorage:
    size: 1Gi
  flowfileRepoStorage:
    size: 10Gi
  contentRepoStorage:
    size: 10Gi
  provenanceRepoStorage:
    size: 10Gi
  logStorage:
    size: 5Gi

resources: {}
logresources:
  requests:
    cpu: 10m
    memory: 10Mi
  limits:
    cpu: 50m
    memory: 50Mi

affinity: {}
nodeSelector: {}
tolerations: []
initContainers: {}
extraVolumeMounts: []
extraVolumes: []
extraContainers: []
terminationGracePeriodSeconds: 30
env: []
envFrom: []
extraOptions: []

# -------------------------------------------------------------------
# Platform-Specific Configurations
# -------------------------------------------------------------------
openshift:
  scc:
    enabled: false
  route:
    enabled: false

ca:
  enabled: false
  persistence:
    enabled: true
  server: ""
  service:
    port: 9090
  token: sixteenCharacters
  admin:
    cn: admin
  serviceAccount:
    create: false
  openshift:
    scc:
      enabled: false

certManager:
  enabled: false
  clusterDomain: cluster.local
  keystorePasswd: changeme
  truststorePasswd: changeme
  replaceDefaultTrustStore: false
  additionalDnsNames:
    - localhost
  refreshSeconds: 300
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 100m
      memory: 128Mi
  certDuration: 2160h
  caDuration: 87660h

zookeeper:
  enabled: true
  url: ""
  port: 2181
  replicaCount: 3

registry:
  enabled: true
  url: "https://192.168.67.2:31880"
  port: 31880
  
metrics:
  prometheus:
    enabled: false
    port: 9092
    serviceMonitor:
      enabled: false
      labels: {}
